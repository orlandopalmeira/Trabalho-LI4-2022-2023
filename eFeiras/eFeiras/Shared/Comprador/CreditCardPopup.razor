@using eFeiras.Business.Produtos;
@using eFeiras.Business.Compras;

@{
    var showClass = IsVisible ? "d-block" : "d-none";
}

<div class="toast-container p-3 @showClass" role="dialog" style="position: absolute; top:@top; left: @left; border-radius: 35px;" data-bs-autohide="true" data-bs-delay="5000">
    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Insira os dados do cartão de crédito</strong>
            <button type="button" class="btn-close" aria-label="Close" @onclick="Close"></button>
        </div>

        <div class="toast-body">
            <form style="padding: 15px">
                <div class="form-group row" style="padding-bottom: 10px">
                    <InputText class="form-control" placeholder="Número do cartão de crédito" @bind-Value="@Number" />
                </div>
                <div class="form-group row" style="padding-bottom: 10px">
                    <InputText style="margin-right: 20px; width: 30%" class="form-control" placeholder="CVV" @bind-Value="@CVV" />
                    <InputText style="width: 40%" class="form-control" placeholder="Validade (MM/AAAA)" @bind-Value="@Validade" />
                </div>
                <div class="form-group row" style="padding-bottom: 10px">
                    <InputText class="form-control" placeholder="Nome do titular" @bind-Value="@NomeTitular" />
                </div>
                <div class="form-group row" style="50%">
                    <button class="mybtn"  @onclick="EfetuarPagamento">Efetuar pagamento</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>

</style>

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback Event { get; set; }

    private string top = "35%";
    private string left = "35%";

    private string? Number = null;
    private string? CVV = null;
    private string? Validade = null;
    private string? NomeTitular = null;

    public void Show(string top = "35%", string left = "35%")
    {
        this.top = top;
        this.left = left;
        IsVisible = true;
        StateHasChanged();
    }

    public void Close()
    {
        Number = CVV = Validade = NomeTitular = string.Empty;
        IsVisible = false;
        StateHasChanged();
    }

    private void EfetuarPagamento()
    {
        if(Number != null && CVV != null && Validade != null && NomeTitular != null)
        {    
            IEFeirasFacade ef = new eFeirasFacade();
            CreditCartInfo.setData(Number, CVV, Validade, NomeTitular);
            ICollection<Pair<Produto, int>> infoCart = CarrinhoCompras.getShoppingCartInfo();
            Compra compra = new Compra(-1, DateTime.Now, CurrentUser.getCurrentUser(), infoCart);
            ef.addCompra(compra);
            CarrinhoCompras.clearCarrinho();
            CreditCartInfo.clear();
            Event.InvokeAsync(null); // Atualiza a página do carrinho de compras
            Close(); // fecha a janela que pede os dados do cartão
        }
    }

}
